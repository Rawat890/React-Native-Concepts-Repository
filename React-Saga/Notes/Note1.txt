
Redux Thunk Questions (1-50)
Basic Concepts
What is Redux Thunk?

Redux Thunk is a middleware that allows you to write action creators that return a function instead of an action object. This function can perform asynchronous operations and dispatch actions.

Why do we need Redux Thunk?

Redux Thunk enables handling asynchronous logic (e.g., API calls) in Redux, which is not possible with plain synchronous action creators.

How do you install Redux Thunk?

Use npm: npm install redux-thunk or yarn: yarn add redux-thunk.

How do you apply Redux Thunk middleware to the store?

Use applyMiddleware from Redux:c
import { createStore, applyMiddleware } from 'redux';
import thunk from 'redux-thunk';
import rootReducer from './reducers';

const store = createStore(rootReducer, applyMiddleware(thunk));
What does a Thunk action creator look like?

A Thunk action creator returns a function that receives dispatch and getState as arguments:

javascript
Copy
const fetchData = () => {
  return async (dispatch) => {
    dispatch({ type: 'FETCH_DATA_REQUEST' });
    try {
      const response = await fetch('https://api.example.com/data');
      const data = await response.json();
      dispatch({ type: 'FETCH_DATA_SUCCESS', payload: data });
    } catch (error) {
      dispatch({ type: 'FETCH_DATA_FAILURE', error });
    }
  };
};
Can you dispatch multiple actions in a Thunk?

Yes, you can dispatch multiple actions within a Thunk to handle different states (e.g., loading, success, error).

What is the difference between a Thunk and a plain action creator?

A plain action creator returns an action object, while a Thunk action creator returns a function that can perform asynchronous operations.

How do you handle errors in Redux Thunk?

Use a try-catch block to catch errors and dispatch an error action.

Can you access the current state in a Thunk?

Yes, the Thunk function receives getState as an argument, which allows you to access the current state.

What are the limitations of Redux Thunk?

Thunks can become hard to test and maintain for complex async flows. They also lack advanced features like cancellation or race conditions.

Intermediate Concepts
How do you test a Thunk action creator?

Use a mocking library like redux-mock-store to simulate the store and test the dispatched actions.

Can you chain Thunks?

Yes, you can dispatch another Thunk from within a Thunk.

How do you handle side effects in Redux Thunk?

Side effects (e.g., API calls) are handled inside the Thunk function.

What is the role of dispatch in a Thunk?

dispatch is used to send actions to the Redux store.

What is the role of getState in a Thunk?

getState provides access to the current state of the Redux store.

How do you cancel a Thunk?

Redux Thunk does not support cancellation out of the box. You need to implement custom logic (e.g., using a flag).

How do you handle race conditions in Redux Thunk?

You need to manually implement logic to handle race conditions (e.g., using a flag or debouncing).

Can you use Thunk with other Redux middleware?

Yes, Thunk can be used alongside other middleware like Redux Logger.

How do you debug a Thunk?

Use Redux DevTools to inspect dispatched actions and state changes.

What is the difference between Thunk and Redux Promise?

Thunk allows more control over async flows, while Redux Promise automatically dispatches actions based on promise resolution.

Advanced Concepts
How do you handle pagination with Redux Thunk?

Use Thunk to fetch data for each page and update the state with the new data.

How do you handle authentication with Redux Thunk?

Use Thunk to make API calls for login/logout and dispatch actions to update the authentication state.

How do you handle file uploads with Redux Thunk?

Use Thunk to send files to the server and dispatch actions to update the upload progress.

How do you handle real-time updates with Redux Thunk?

Use Thunk to connect to a WebSocket or polling mechanism and dispatch actions to update the state.

How do you handle caching with Redux Thunk?

Use Thunk to check the cache before making an API call and dispatch actions to update the state.

Redux Saga Questions (51-100)
Basic Concepts
What is Redux Saga?

Redux Saga is a middleware that uses ES6 Generators to handle side effects (e.g., API calls) in a more structured and testable way.

Why use Redux Saga over Redux Thunk?

Sagas provide better control over complex async flows, including cancellation, race conditions, and parallel tasks.

How do you install Redux Saga?

Use npm: npm install redux-saga or yarn: yarn add redux-saga.

How do you apply Redux Saga middleware to the store?

Use createSagaMiddleware and apply it to the store:

javascript
Copy
import createSagaMiddleware from 'redux-saga';
import { createStore, applyMiddleware } from 'redux';
import rootReducer from './reducers';
import rootSaga from './sagas';

const sagaMiddleware = createSagaMiddleware();
const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));
sagaMiddleware.run(rootSaga);
What is a Generator function?

A Generator function (function*) can pause and resume execution using the yield keyword.

What is a Saga?

A Saga is a Generator function that listens for specific actions and performs side effects.

What are the key Redux Saga effects?

take, put, call, fork, takeEvery, takeLatest, all, race.

What does takeEvery do?

takeEvery listens for every occurrence of a specific action and runs a Saga.

What does takeLatest do?

takeLatest listens for the latest occurrence of a specific action and cancels any previous running Sagas.

What does call do?

call is used to call a function (e.g., an API call) and wait for its result.

Intermediate Concepts
How do you handle errors in Redux Saga?

Use a try-catch block inside the Saga.

How do you cancel a Saga?

Use the cancel effect or takeLatest to automatically cancel previous Sagas.

How do you handle race conditions in Redux Saga?

Use the race effect to handle race conditions.

How do you test a Saga?

Use libraries like redux-saga-test-plan or redux-saga-tester.

How do you chain Sagas?

Use yield to call another Saga.

Advanced Concepts
How do you handle pagination with Redux Saga?

Use Sagas to fetch data for each page and update the state.

How do you handle authentication with Redux Saga?

Use Sagas to make API calls for login/logout and dispatch actions to update the state.

How do you handle file uploads with Redux Saga?

Use Sagas to send files to the server and dispatch actions to update the upload progress.

How do you handle real-time updates with Redux Saga?

Use Sagas to connect to a WebSocket or polling mechanism and dispatch actions to update the state.

How do you handle caching with Redux Saga?

Use Sagas to check the cache before making an API call and dispatch actions to update the state.